@using SisVetWeb.Helpers
@using PagedList.Mvc;

@model PagedList.IPagedList<Domain.EntidadesLeitura.Cadastro.ClienteDapper>

@{
    ViewBag.Title = "Clientes";
}

<h3>Lista de Clientes</h3>

@Html.Partial("ConfirmacaoExclusao")

<p>
    
    @using (Html.BeginForm("Index", "Cliente", FormMethod.Get)) {
        <div class="row">
            <div class="pull-right col-md-1">
                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Adicionar Cliente", "Create", "Cliente", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
            </div>
            <div class="col-md-2" align="left">
                @Html.DropDownList("tipoPesquisa",
             new List<SelectListItem>{
                    new SelectListItem{Text = "Nome",Value = "Nome",Selected = true},
                    new SelectListItem{Text = "Cpf",Value = "Cpf"},
                    new SelectListItem{Text = "Fone",Value = "Fone"}}, new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.TextBox("pesquisa", "", new { placeholder = "Pesquise...", @class = "form-control" })
            </div>
            <div class="col-md-2">
                <input type="submit" value="Filtrar" class="btn btn-primary pull-left" />
            </div>
        </div>
    }

</p>
<table class="table table-condensed table-hover">
    <tr class="active">
        <th>
            @Html.ActionLink("Id", "Index", new { ordenacao = ViewBag.IdParam, tipoPesquisa = ViewBag.tipoPesquisa, pesquisa = ViewBag.pesquisaCorrente })
        </th>
        <th>
            @Html.ActionLink("Nome", "Index", new { ordenacao = ViewBag.NomeParam, tipoPesquisa = ViewBag.tipoPesquisa, pesquisa = ViewBag.pesquisaCorrente })
        </th>
        <th class="text-center">
            Cpf
        </th>
        <th class="text-center">
            Sexo
        </th>
        <th class="text-left">
            E-mail
        </th>
        <th class="text-center">
            Nascimento
        </th>
        <th class="text-center">
            Cadastro
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr id="row-@item.ID">
            <td class="col-sm-1">
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td class="col-sm-3">
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td class="col-sm-2 text-center">
                @Html.DisplayFor(modelItem => item.CpfCnpj)
            </td>
            <td class="col-sm-1 text-center">
                @Html.DisplayFor(modelItem => item.Sexo)
            </td>
            <td class="col-sm-1">
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td class="col-sm-1 text-center">
                @Html.FormatValue(Convert.ChangeType(item.DataNascimento, typeof(object)),
                    "{0: dd/MM/yyyy}")
            </td>
            <td class="col-sm-1 text-center">
                @Html.DisplayFor(modelItem => item.DataCadastro)

            </td>
            <td class="col-sm-2">
                <div class="pull-right">
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Editar", "Edit", "Cliente", routeValues: new { ID = item.ID }, htmlAttributes: new { data_modal = "", @class = "btn btn-xs btn-default" })
                    &nbsp;
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-list'></span>", "Lista Animais", "ListaAnimaisPorCliente", "Cliente", routeValues: new { ID = item.ID }, htmlAttributes: new { data_modal = "", @class = "btn btn-xs btn-default" })
                    &nbsp;
                    <button type="submit" class="btn btn-default btn-xs btn-danger" id="@item.ID" name="@item.Nome">
                        <i class="glyphicon glyphicon-trash"></i>
                    </button>
                    @*<input type="submit" class="btn btn-default btn-xs" id="@item.ID" name="@item.Nome" />*@
                    @*@Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Excluir", "", "", routeValues: new { Id = item.ID }, htmlAttributes: new { data_modal = "", @class = "btn btn-default btn-xs" })*@
                </div>
            </td>
        </tr>
    }

</table>

Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina, ordenacao = ViewBag.ordenacaoCorrente, pesquisa = ViewBag.pesquisaCorrente }))
