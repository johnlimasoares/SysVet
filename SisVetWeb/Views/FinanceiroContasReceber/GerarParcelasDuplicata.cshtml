@model Domain.Entidades.Operacao.Financeiro.FinanceiroTipoRecebimento

<h3>Inclusão Contas Receber</h3>

<link href="~/Content/combobox.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.Label("Cliente", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClienteId", (IEnumerable<SelectListItem>)ViewBag.ClienteId, "Selecione...", new { @class = "form-control combobox" })
                @Html.ValidationMessageFor(model => model.ClienteId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Centro de Custo", new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-lg-pull-0" style="width:500px;">
                @Html.DropDownList("FinanceiroCentroDeCustoId", (IEnumerable<SelectListItem>)ViewBag.CentroCustoId, "Selecione...", new { @class = "form-control ", required = "", title = "Este campo é obrigatório!" })
                <span class="field-validation-valid" data-valmsg-for="FinanceiroCentroDeCustoId" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Forma Pagamento", new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-lg-pull-0" style="width:500px;">
                @Html.DropDownList("FinanceiroPlanoDePagamentoId", (IEnumerable<SelectListItem>)ViewBag.FormaPagamentoId, "Selecione...", new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.FinanceiroPlanoDePagamentoId)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="DataEmissao">Emissão</label>
            <div class="col-md-5 col-lg-pull-0" style="width:500px;">
                <input class="form-control" id="DataEmissao" name="DataEmissao" type="date" required title="Este campo é obrigatório">
                <span class="field-validation-valid" data-valmsg-for="DataEmissao" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="quantidadeParcelas">Quantidade Parcelas</label>
            <div class="col-md-10" style="width: 500px">
                <input class="form-control" id="quantidadeParcelas" name="quantidadeParcelas" type="number" required title="Este campo é obrigatório" value="" />
                <span class="field-validation-valid" data-valmsg-for="quantidadeParcelas" data-valmsg-replace="true"></span>
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2 moeda" for="ValorTotal">Valor</label>
            <div class="col-md-10" style="width: 500px">
                <input class="form-control" onkeydown="formataValorDelegate(this, 11, event, 2, '', ',');" id="ValorTotal" name="ValorTotal" type="text" required title="Este campo é obrigatório" value="" />
                <span class="field-validation-valid" data-valmsg-for="ValorTotal" data-valmsg-replace="true"></span>

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Observacao">Oberva&#231;&#245;es</label>
            <div class="col-md-10" style="width: 500px">
                <textarea class="form-control " cols="20" id="Observacao" name="Observacao" rows="2" style="width: 470px; max-width: 470px; height: 200px; max-height:200px "></textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>
@section Scripts {
    <script src="~/Scripts/jquery.combobox.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/validacao")
    <script type="text/javascript">
        (function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || Globalize.parseDate(value, 'dd/MM/yyyy') !== null;
            };
        })();

        //var inputMoeda = document.getElementsByClassName('moeda');
        //inputMoeda.addEventListener('keydown', formataValorDelegate(this, 11, this.event, 2, '.', ','), false);

        function formataValorDelegate(campo, tammax, teclapres, decimal, ptmilhar, ptdecimal) {
            var tecla = teclapres.keyCode;
            vr = limpaValor(campo.value, "0123456789", tammax);
            tam = vr.length;
            dec = decimal;
            if (tam < tammax && tecla != 8) { tam = vr.length + 1; }
            if (tecla == 8) { tam = tam - 1; }
            if (tecla == 8 || tecla >= 48 && tecla <= 57 || tecla >= 96 && tecla <= 105) {
                if (tam <= dec) { campo.value = vr; }
                else if ((tam > dec) && (tam <= dec + 3)) {
                    //alert(tam);
                    campo.value = vr.substr(0, tam - dec) + ptdecimal + vr.substr(tam - dec, tam);
                } else if ((tam >= dec + 4) && (tam <= dec + 6)) {
                    campo.value = vr.substr(0, tam - 3 - dec) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 7) && (tam <= dec + 9)) {
                    campo.value = vr.substr(0, tam - 6 - dec) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 10) && (tam <= dec + 12)) {
                    campo.value = vr.substr(0, tam - 9 - dec) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 13) && (tam <= dec + 15)) {
                    campo.value = vr.substr(0, tam - 12 - dec) + ptmilhar + vr.substr(tam - 12 - dec, 3) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 16) && (tam <= dec + 18)) {
                    campo.value = vr.substr(0, tam - 15 - dec) + ptmilhar + vr.substr(tam - 15 - dec, 3) + ptmilhar + vr.substr(tam - 12 - dec, 3) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 19) && (tam <= dec + 21)) {
                    campo.value = vr.substr(0, tam - 18 - dec) + ptmilhar + vr.substr(tam - 18 - dec, 3) + ptmilhar + vr.substr(tam - 15 - dec, 3) + ptmilhar + vr.substr(tam - 12 - dec, 3) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else if ((tam >= dec + 22) && (tam <= dec + 24)) {
                    campo.value = vr.substr(0, tam - 21 - dec) + ptmilhar + vr.substr(tam - 21 - dec, 3) + ptmilhar + vr.substr(tam - 18 - dec, 3) + ptmilhar + vr.substr(tam - 15 - dec, 3) + ptmilhar + vr.substr(tam - 12 - dec, 3) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                } else {
                    campo.value = vr.substr(0, tam - 24 - dec) + ptmilhar + vr.substr(tam - 24 - dec, 3) + ptmilhar + vr.substr(tam - 21 - dec, 3) + ptmilhar + vr.substr(tam - 18 - dec, 3) + ptmilhar + vr.substr(tam - 15 - dec, 3) + ptmilhar + vr.substr(tam - 12 - dec, 3) + ptmilhar + vr.substr(tam - 9 - dec, 3) + ptmilhar + vr.substr(tam - 6 - dec, 3) + ptmilhar + vr.substr(tam - 3 - dec, 3) + ptdecimal + vr.substr(tam - dec, 12);
                }
            }
        }

        function limpaValor(valor, validos, tammax) {
            var result = "";
            var aux;
            for (var i = 0; i < valor.length; i++) {
                aux = validos.indexOf(valor.substring(i, i + 1));
                if (aux >= 0) {
                    if (result.length < tammax - 1) {
                        result += aux;
                    }
                }
            }
            return result;
        }

    </script>
}
